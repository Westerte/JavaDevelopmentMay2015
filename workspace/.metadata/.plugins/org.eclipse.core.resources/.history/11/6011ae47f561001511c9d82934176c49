package edu.nesterenko.touroperator.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import edu.nesterenko.touroperator.connectionpool.ConnectionPool;
import edu.nesterenko.touroperator.connectionpool.ConnectionPoolException;
import edu.nesterenko.touroperator.connectionpool.ConnectionWrapper;
import edu.nesterenko.touroperator.entity.City;
import edu.nesterenko.touroperator.entity.Country;

public class CityDao implements AbstractDao<Integer, City> {
	private final static String FIND_ALL = "SELECT * FROM `city`";
	@Override
	public List<City> findAll() throws DaoException {
		List<City> countryList = new ArrayList<City>();
		ConnectionPool connectionPool = ConnectionPool.getInstance();
		Statement statement = null;
		ConnectionWrapper connection = null;
		try {
			connection = connectionPool.grapConnection();
			statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery(FIND_ALL);
			while(resultSet.next()) {
				countryList.add(new City(resultSet.getInt("city_id"), 
						resultSet.getString("city_name")));
			}
		} catch (ConnectionPoolException | SQLException e) {
			throw new DaoException(e);
		} finally {
			closeStatement(statement);
			connectionPool.releaseConnection(connection);
		}
		return countryList;
	}

	@Override
	public City findByKey(Integer key) {
		throw new UnsupportedOperationException();
	}

	@Override
	public void add(Integer key, City entity) throws DaoException {
		throw new UnsupportedOperationException();
	}

	@Override
	public void delete(Integer key) {
		throw new UnsupportedOperationException();
	}

	@Override
	public void delete(City entity) {
		throw new UnsupportedOperationException();
	}

	@Override
	public City update(City entity) {
		throw new UnsupportedOperationException();
	}

}
