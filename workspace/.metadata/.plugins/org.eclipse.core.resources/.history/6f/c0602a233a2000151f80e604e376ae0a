package edu.nesterenko.auction.participant;

import java.util.Random;
import java.util.concurrent.Phaser;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

import edu.nesterenko.auction.auction.Auction;
import edu.nesterenko.auction.auction.Lot;

public class Participant extends Thread {
	
	private Auction auction;
	private Phaser phaser;
	private Random random = new Random();
	
	
	public Participant(Auction auction, Phaser phaser) {
		this.auction = auction;
		this.phaser = phaser;
		phaser.register();
	}
	
	public void run() {
		trade();
	}
}
