package edu.nesterenko.touroperator.logic;

import java.util.Date;
import java.util.List;

import edu.nesterenko.touroperator.dao.DaoException;
import edu.nesterenko.touroperator.dao.RestTypeDao;
import edu.nesterenko.touroperator.dao.TourDao;
import edu.nesterenko.touroperator.entity.ResortHotel;
import edu.nesterenko.touroperator.entity.RestType;
import edu.nesterenko.touroperator.entity.Tour;
import edu.nesterenko.touroperator.validation.ValidationException;
import edu.nesterenko.touroperator.validation.Validator;

public class TourLogic {
	
	public static void addTour(String name, String description, String cost,
			String beginDate, String endDate, String food, String path, 
			String pathTime, String restType, String resortHotel) 
			 throws LogicException {
		try {
			Validator.checkEmpty(name);
			Validator.checkEmpty(path);
			double costDouble = Validator.checkDouble(cost);
			double pathTimeDouble = Validator.checkDouble(pathTime);
			Date beginDateObject = Validator.checkDate(beginDate);
			Date endDateObject = Validator.checkDate(endDate);
			int restTypeId = Validator.checkInt(restType);
			int resortHotelId = Validator.checkInt(resortHotel);
			Tour tour = new Tour(0, name, description, costDouble, beginDateObject, 
					endDateObject, 0, food, path, 
					pathTimeDouble, new RestType(restTypeId, null, null),
					new ResortHotel(resortHotelId, null, null, null, 0));
			TourDao tourDao = new TourDao();
			tourDao.add(0, tour);				
		} catch (DaoException | ValidationException e) {
			throw new LogicException(e);
		}
	}
	 
	public static List<Tour> findAll() throws LogicException {
		TourDao tourDao = new TourDao();
		try {
			return tourDao.findAll();
		} catch (DaoException e) {
			throw new LogicException(e);
		}
	}
	
	public static void delete(String id) throws LogicException {
		RestTypeDao restTypeDao = new RestTypeDao();
		try {
			int idInt = Validator.checkInt(id);
			restTypeDao.delete(idInt);
		} catch (DaoException | ValidationException e) {
			throw new LogicException(e);
		}
	}
	
	public static void editTour(String id, String name, String description, String cost,
			String beginDate, String endDate, String food, String path, 
			String pathTime, String restType, String resortHotel) 
			 throws LogicException {
		try {
			Validator.checkEmpty(name);
			Validator.checkEmpty(path);
			double costDouble = Validator.checkDouble(cost);
			double pathTimeDouble = Validator.checkDouble(pathTime);
			Date beginDateObject = Validator.checkDate(beginDate);
			Date endDateObject = Validator.checkDate(endDate);
			int restTypeId = Validator.checkInt(restType);
			int resortHotelId = Validator.checkInt(resortHotel);
			Tour tour = new Tour(0, name, description, costDouble, beginDateObject, 
					endDateObject, 0, food, path, 
					pathTimeDouble, new RestType(restTypeId, null, null),
					new ResortHotel(resortHotelId, null, null, null, 0));
			TourDao tourDao = new TourDao();
			tourDao.add(0, tour);				
		} catch (DaoException | ValidationException e) {
			throw new LogicException(e);
		}
	}

}
