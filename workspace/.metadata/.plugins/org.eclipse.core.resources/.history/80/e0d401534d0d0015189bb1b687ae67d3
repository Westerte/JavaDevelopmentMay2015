package edu.nesterenko.airline.dao;

import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import edu.nesterenko.airline.creator.AirlinerCreator;
import edu.nesterenko.airline.creator.FreighterCreator;
import edu.nesterenko.airline.exception.LogicalException;
import edu.nesterenko.airline.exception.PhisicalException;
import edu.nesterenko.airline.logic.AirlineEditor;

public class StaxParserDao implements DataAccessable {
	XMLStreamReader reader;
	@Override
	public void loadDataFromSource(Object... args) throws PhisicalException,
			LogicalException {
		String filePath = (String)args[0];
		XMLInputFactory inputFactory = XMLInputFactory.newInstance();
		try {
			reader = inputFactory.createXMLStreamReader(new FileInputStream(filePath));
			parsing();
		} catch (FileNotFoundException | XMLStreamException e) {
			throw new PhisicalException(e);
		} 
	}
	
	private void parsing() {
		
	}
	
	private void addAirliner() {
		try {
			AirlineEditor.addAirplane(new AirlinerCreator(), new Object[] {numberPlate, manufacturer, model, maxRange, capacity, bearingCapacity, 
									  fuelConsumption, seatsCount, classCount, luggageCapacity});
		} catch (PhisicalException | LogicalException e) {}	
	}
	
	private void addFrighter() {
		try {
			AirlineEditor.addAirplane(new FreighterCreator(), new Object[] {numberPlate, manufacturer, model, maxRange, capacity, bearingCapacity, 
				                      fuelConsumption, cargoHoldCount});
		} catch (PhisicalException | LogicalException e) {}
	}

	@Override
	public void saveDataToSource(Object... args) {
		throw new UnsupportedOperationException();
	}

}
