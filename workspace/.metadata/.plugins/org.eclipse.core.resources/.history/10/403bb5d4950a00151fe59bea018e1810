package edu.nesterenko.parcer.run;


import java.io.IOException;
import java.util.List;

import edu.nesterenko.parcer.exception.LogicalException;
import edu.nesterenko.parcer.exception.PhisicalException;
import edu.nesterenko.parcer.filereader.FileReader;
import edu.nesterenko.parcer.logic.TextEditor;
import edu.nesterenko.parcer.logic.TextFinder;
import edu.nesterenko.parcer.parser.Parser;
import edu.nesterenko.parcer.reporter.Reporter;

public class Runner {
	private final static String SAVE_FILE_PATH = "exit.txt";
	
	public static void main(String... args) throws LogicalException, IOException, PhisicalException {
		Parser parser = new Parser();
		parser.configure("config\\conf.properties");
		String text = FileReader.readFromFIle("text.txt");
		parser.parce(text);	
		String revivedText = parser.reviveText();
		Reporter.report(revivedText , SAVE_FILE_PATH, "Delete Words Starting With Consonant");
		List<String> strings = TextFinder.findSentenceOrderedByWordCount(parser);
		Reporter.report(strings, SAVE_FILE_PATH, "Find Sentence Ordered By Word Count");
		TextEditor.deleteWordsStartingWithConsonant(parser, 3);
		Reporter.report("DONE", SAVE_FILE_PATH, "Delete Words Starting With Consonant");
		TextEditor.swapFirstAndLastWords(parser);
		Reporter.report("DONE", SAVE_FILE_PATH, "Swap First And Last Words");
		revivedText = parser.reviveText();
		Reporter.report(revivedText , SAVE_FILE_PATH, "Delete Words Starting With Consonant");
		strings = TextFinder.findSentenceOrderedByWordCount(parser);
	}
}
