Find Sentence Ordered By Word CountThe output from the program is:  Omitting them can make the code  more brittle. One possible implementation of the applyBrakes method could be as follows:  Deciding when to omit the braces is a matter of personal taste. The if-then statement is the most basic of all the control flow statements. The compiler cannot catch this sort of error;  you'll just get the wrong results.  The if-then-else statement provides a secondary path of execution when an "if" clause  evaluates to false. In addition, the opening and closing braces are optional, provided that the "then" clause contains  only one statement:  It tells your program  to execute a certain section of code only if a particular test evaluates to true. In this case, the  action is to simply print an error message stating that the bicycle has already stopped.  However, once a condition is satisfied, the  appropriate statements are executed (grade = 'C';) and the remaining conditions are not  evaluated.If a second statement is later added to the "then" clause, a common mistake would  be forgetting to add the newly required braces. If this test evaluates to false (meaning that the bicycle is not in motion), control jumps to the  end of the if-then statement.  For example, the  Bicycle class could allow the brakes to decrease the bicycle's speed only if the bicycle is already  in motion. You may have noticed that the value of testscore can satisfy more than one expression in the  compound statement: 76 >= 70 and 76 >= 60. You could use an if-then-else statement in the applyBrakes method to  take some action if the brakes are applied when the bicycle is not in motion. The following program, IfElseDemo, assigns a grade based on the value of a test score: an A for  a score of 90% or above, a B for a score of 80% or above, and so on.    
